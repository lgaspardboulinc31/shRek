place_palettes
[Shrek logo](./images/shRek_prez/Slide1.jpeg)
getwd()
knitr::include_graphics("images/shRek_prez/Slide4.jpeg", dpi = 96)
data
data()
data("women")
View(women)
View(Titanic)
pal <-burp(villain_palettes$Rumpelstiltskin,pal_class="Hero",n=3)
pal <-burp(villain_palettes$Rumpelstiltskin,pal_class="Villain",n=3)
pal <-burp("Rumpelstiltskin",pal_class="Villain",n=3)
pal
#Check survival
ggplot(data=Titanic, aes(x=Age, y=Freq)) + geom_bar()
library(ggplot2)
#Check survival
ggplot(data=Titanic, aes(x=Age, y=Freq)) + geom_bar()
#Check survival
ggplot(data=as.data.frame(Titanic), aes(x=Age, y=Freq)) + geom_bar()
#Check survival
ggplot(data=as.data.frame(Titanic), aes(x=Age, y=Freq)) + geom_bar(stat="identity")
#Check survival
ggplot(data=as.data.frame(Titanic), aes(x=Age, y=Freq)) + geom_bar(stat="identity") + facet_wrap(~Survived)
#Check survival
ggplot(data=as.data.frame(Titanic), aes(x=Age, y=Freq, fill=Class)) + geom_bar(stat="identity") + facet_wrap(~Survived)
# Pick color
pal <-burp("Rumpelstiltskin",pal_class="Villain",n=4)
#Check survival
ggplot(data=as.data.frame(Titanic), aes(x=Age, y=Freq, fill=Class)) + geom_bar(stat="identity") + facet_wrap(~Survived)+
scale_fill_manual(values=pal)
#Check survival
ggplot(data=as.data.frame(Titanic), aes(x=Age, y=Freq, fill=Class)) + geom_bar(stat="identity") + facet_wrap(~Survived+Sex)+
scale_fill_manual(values=pal)
#Check survival
ggplot(data=as.data.frame(Titanic), aes(x=Age, y=Freq, fill=Class)) + geom_bar(stat="identity") + facet_wrap(~Survived+Sex)+
scale_fill_manual(values=pal)+
title("Survival of Titanic passengers according to sex and class")
#Check survival
ggplot(data=as.data.frame(Titanic), aes(x=Age, y=Freq, fill=Class)) + geom_bar(stat="identity") + facet_wrap(~Survived+Sex)+
scale_fill_manual(values=pal)+
title("Survival of Titanic passengers according to sex and class")
#Check survival
ggplot(data=as.data.frame(Titanic), aes(x=Age, y=Freq, fill=Class)) + geom_bar(stat="identity") + facet_wrap(~Survived+Sex)+
scale_fill_manual(values=pal)+
lab("Survival of Titanic passengers according to sex and class")
#Check survival
ggplot(data=as.data.frame(Titanic), aes(x=Age, y=Freq, fill=Class)) + geom_bar(stat="identity") + facet_wrap(~Survived+Sex)+
scale_fill_manual(values=pal)+
labs("Survival of Titanic passengers according to sex and class")
#Check survival
ggplot(data=as.data.frame(Titanic), aes(x=Age, y=Freq, fill=Class)) + geom_bar(stat="identity") + facet_wrap(~Survived+Sex)+
scale_fill_manual(values=pal)+
labs(title="Survival of Titanic passengers according to sex and class")
#Check survival
ggplot(data=as.data.frame(Titanic), aes(x=Class, y=Freq, fill=Age)) + geom_bar(stat="identity") + facet_wrap(~Survived+Sex)+
scale_fill_manual(values=pal)+
labs(title="Survival of Titanic passengers according to sex and class")
Age
#Check survival
ggplot(data=as.data.frame(Titanic), aes(x=Age, y=Freq, fill=Class)) + geom_bar(stat="identity") + facet_wrap(~Survived+Sex)+
scale_fill_manual(values=pal)+
labs(title="Survival of Titanic passengers according to sex and class")
# Pick colors
shrek_pal = burp("Shrek",pal_class="Hero",n=3)
#Do Plot
ggplot(iris, aes(y=Sepal.Length, x=Species, fill=Species)) + geom_boxplot() +
scale_fill_manual(values=shrek_pal)
# Pick colors
shrek_pal = burp("Shrek",pal_class="Hero",n=3)
#Do Plot
ggplot(iris, aes(y=Sepal.Length, x=Species, fill=Species)) + geom_boxplot() +
scale_fill_manual(values=shrek_pal)
# Pick colors
shrek_pal = burp("Shrek",pal_class="Hero",n=3)
#Do Plot
ggplot(iris, aes(y=Sepal.Length, x=Species, fill=Species)) + geom_boxplot() +
scale_fill_manual(values=shrek_pal)
knitr::include_graphics("images/shRek_prez/Slide3.jpeg", dpi = 300)
knitr::include_graphics("images/shRek_prez/Slide3.jpeg", dpi = 100)
# Pick colors
shrek_pal = burp("Shrek",pal_class="Hero",n=3)
#Do Plot
ggplot(iris, aes(y=Sepal.Length, x=Species, fill=Species)) + geom_boxplot() +
scale_fill_manual(values=shrek_pal)
# Pick colors
shrek_pal = burp("Shrek",pal_class="Hero",n=3)
#Do Plot
ggplot(iris, aes(y=Sepal.Length, x=Species, fill=Species)) + geom_boxplot() +
scale_fill_manual(values=shrek_pal)
show_my_swamp(shrek_color)
# burp allows to extract color palette from the ones available
shrek_color <- burp("Shrek", pal_class="Hero", n=6)
# show_my_swamp displays the palette in a nice way
show_my_swamp(shrek_color)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "man/figures/README-",
out.width = "100%"
)
library(shRek)
library(ggplot2)
# Retrieve the available palettes
hero_palettes
knitr::include_graphics("images/shRek_prez/Slide3.jpeg", dpi = 100)
villain_palettes
knitr::include_graphics("images/shRek_prez/Slide2.jpeg", dpi = 96)
place_palettes
knitr::include_graphics("images/shRek_prez/Slide4.jpeg", dpi = 96)
# burp allows to extract color palette from the ones available
shrek_color <- burp("Shrek", pal_class="Hero", n=6)
# show_my_swamp displays the palette in a nice way
show_my_swamp(shrek_color)
# Pick colors
shrek_pal = burp("Shrek",pal_class="Hero",n=3)
#Do Plot
ggplot(iris, aes(y=Sepal.Length, x=Species, fill=Species)) + geom_boxplot() +
scale_fill_manual(values=shrek_pal)
# Pick Fairy Godmother palette
pal= burp("Fairy_Godmother","Villain",n=5)
# Make plot
ggplot(data=diamonds, aes(x=price, group=cut, fill=cut)) +
geom_density(adjust=1.5, alpha=0.7)  + scale_fill_manual(values=pal)
# Let pick Dragon_Keep palette
dragon <- c(burp("Dragon_Keep", pal_class = "Place", n=6),burp("Dragon", pal_class = "Hero", n=1))
#show_my_swamp(dragon)
library(reshape2)
WorldPhones.m = melt(WorldPhones)
colnames(WorldPhones.m) = c("Year", "Continent", "Phones")
head(WorldPhones.m)
# Make plot
ggplot(WorldPhones.m, aes(x=Year, y=Phones, color=Continent)) + geom_line() + scale_color_manual(values=dragon)
# Pick color
pal <-burp("Rumpelstiltskin",pal_class="Villain",n=4)
#Check survival
ggplot(data=as.data.frame(Titanic), aes(x=Age, y=Freq, fill=Class)) + geom_bar(stat="identity") + facet_wrap(~Survived+Sex)+
scale_fill_manual(values=pal)+
labs(title="Survival of Titanic passengers according to sex and class")
devtools::document()
roxygen2::roxygenise()
burp("Shrek", pal_class="Hero")
show_my_swamp(burp("Shrek", pal_class="Hero"))
for (palette in names(hero_palettes)){
show_my_swamp(burp(palette, pal_class = "Hero"))
}
for (palette in names(villain_palettes)){
show_my_swamp(burp(palette, pal_class = "Villain"))
}
for (palette in names(place_palettes)){
show_my_swamp(burp(palette, pal_class = "Place"))
}
dev.off()
pdf("all_colors.pdf")
for (palette in names(hero_palettes)){
show_my_swamp(burp(palette, pal_class = "Hero"))
}
for (palette in names(villain_palettes)){
show_my_swamp(burp(palette, pal_class = "Villain"))
}
for (palette in names(place_palettes)){
show_my_swamp(burp(palette, pal_class = "Place"))
}
dev.off()
for (palette in names(hero_palettes)){
show_my_swamp(burp(palette, pal_class = "Hero"))
}
for (palette in names(villain_palettes)){
show_my_swamp(burp(palette, pal_class = "Villain"))
}
for (palette in names(place_palettes)){
show_my_swamp(burp(palette, pal_class = "Place"))
}
dev.off()
f
pdf("all_colors.pdf")
for (palette in names(hero_palettes)){
print(show_my_swamp(burp(palette, pal_class = "Hero")))
}
for (palette in names(villain_palettes)){
print(show_my_swamp(burp(palette, pal_class = "Villain")))
}
for (palette in names(place_palettes)){
print(show_my_swamp(burp(palette, pal_class = "Place")))
}
dev.off()
pdf("all_colors.pdf")
par(mfrow = c(3, 3))
for (palette in names(hero_palettes)){
print(show_my_swamp(burp(palette, pal_class = "Hero")))
}
for (palette in names(villain_palettes)){
print(show_my_swamp(burp(palette, pal_class = "Villain")))
}
for (palette in names(place_palettes)){
print(show_my_swamp(burp(palette, pal_class = "Place")))
}
dev.off()
par(mfrow = c(3, 3))
for (palette in names(hero_palettes)){
print(show_my_swamp(burp(palette, pal_class = "Hero")))
}
names(hero_palettes)
pdf("all_colors.pdf")
par(mfrow = c(3, 3))
print(show_my_swamp(burp(palette, pal_class = "Hero")))
dev.off()
pdf("all_colors.pdf")
par(mfrow = c(3, 3))
print(show_my_swamp(burp(hero_palettes[1], pal_class = "Hero")))
print(show_my_swamp(burp(hero_palettes[2], pal_class = "Hero")))
dev.off()
hero_palettes[1]
pdf("all_colors.pdf")
par(mfrow = c(3, 3))
print(show_my_swamp(burp(names(hero_palettes[1]), pal_class = "Hero")))
print(show_my_swamp(burp(names(hero_palettes[2]), pal_class = "Hero")))
dev.off()
pdf("all_colors.pdf")
par(mfrow = c(3, 3))
show_my_swamp(burp(names(hero_palettes[1]), pal_class = "Hero")))
show_my_swamp(burp(names(hero_palettes[2]), pal_class = "Hero")))
pdf("all_colors.pdf")
par(mfrow = c(3, 3))
show_my_swamp(burp(names(hero_palettes[1]), pal_class = "Hero"))
show_my_swamp(burp(names(hero_palettes[2]), pal_class = "Hero"))
dev.off()
# make all palette plot
p1=show_my_swamp(burp(names(hero_palettes[1]), pal_class = "Hero"))
p2=show_my_swamp(burp(names(hero_palettes[2]), pal_class = "Hero"))
par(mfrow = c(3, 3))
p1
p2
ggarrange(p1,p2, ncols=2)
library(GGally)
ggarrange(p1,p2, ncols=2)
library(ggpubr)
pdf("all_colors.pdf")
ggarrange(p1,p2, ncols=2)
# make all palette plot
p1=show_my_swamp(burp(names(hero_palettes[1]), pal_class = "Hero"))
p2=show_my_swamp(burp(names(hero_palettes[2]), pal_class = "Hero"))
pdf("all_colors.pdf")
ggarrange(p1,p2, ncols=2)
p1+p2
ggarrange(p1,p2, ncol=2)
dev.off()
pdf("all_colors.pdf")
ggarrange(p1,p2, ncol=2)
dev.off()
p2=show_my_swamp(burp(names(hero_palettes[2]), pal_class = "Hero"))
p1=show_my_swamp(burp(names(hero_palettes[1]), pal_class = "Hero"))
p2=show_my_swamp(burp(names(hero_palettes[2]), pal_class = "Hero"))
p3=show_my_swamp(burp(names(hero_palettes[3]), pal_class = "Hero"))
p4=show_my_swamp(burp(names(hero_palettes[4]), pal_class = "Hero"))
p5=show_my_swamp(burp(names(hero_palettes[5]), pal_class = "Hero"))
p6=show_my_swamp(burp(names(hero_palettes[6]), pal_class = "Hero"))
p7=show_my_swamp(burp(names(hero_palettes[7]), pal_class = "Hero"))
# make all palette plot
plotlist= list()
for (palette in names(villain_palettes)){
plotlist[[palette]]=show_my_swamp(burp(palette, pal_class = "Villain")))
# make all palette plot
plotlist= list()
for (palette in names(villain_palettes)){
plotlist[[palette]]=show_my_swamp(burp(palette, pal_class = "Villain")))
for (palette in names(hero_palettes)){
plotlist[[palette]]=show_my_swamp(burp(palette, pal_class = "Hero")))
# make all palette plot
plotlist= list()
for (palette in names(hero_palettes)){
plotlist[[palette]]=show_my_swamp(burp(palette, pal_class = "Hero")))
for (palette in names(hero_palettes)){
plotlist[[palette]]=show_my_swamp(burp(palette, pal_class = "Hero")))
library(shRek)
show_my_swamp(burp(palette, pal_class = "Hero")))
for (palette in names(hero_palettes)){
plotlist[[palette]]=show_my_swamp(burp(palette, pal_class = "Hero"))
}
pdf("all_colors.pdf")
ggarrange(plotlist = plotlist, ncol=3)
dev.off()
pdf("all_colors.pdf")
ggarrange(plotlist = plotlist, ncol=3, nrow=3)
dev.off()
pdf("all_colors.pdf", width = 15, height = 15)
ggarrange(plotlist = plotlist, ncol=3, nrow=3)
dev.off()
pdf("all_colors.pdf", width = 15, height = 10)
ggarrange(plotlist = plotlist, ncol=3, nrow=3)
dev.off()
hero_palettes
plotlist_hero= list()
plotlist_villain = list()
plotlist_places = list()
for (palette in names(hero_palettes)){
plotlist_hero[[palette]]=show_my_swamp(burp(palette, pal_class = "Hero"))
}
for (palette in names(villain_palettes)){
plotlist_villain[[palette]]=show_my_swamp(burp(palette, pal_class = "Villain"))
}
for (palette in names(place_palettes)){
plotlist_hero[[palette]]=show_my_swamp(burp(palette, pal_class = "Place"))
}
length(plotlist_villain)
pdf("all_colors_hero.pdf", width = 15, height = 10)
ggarrange(plotlist = plotlist_hero, ncol=3, nrow=3)
ggarrange(plotlist = plotlist_villain, ncol=2, nrow=2)
ggarrange(plotlist = plotlist_places, ncol=2, nrow=2)
plotlist_hero= list()
plotlist_villain = list()
plotlist_places = list()
for (palette in names(hero_palettes)){
plotlist_hero[[palette]]=show_my_swamp(burp(palette, pal_class = "Hero"))
}
for (palette in names(villain_palettes)){
plotlist_villain[[palette]]=show_my_swamp(burp(palette, pal_class = "Villain"))
}
for (palette in names(place_palettes)){
plotlist_places[[palette]]=show_my_swamp(burp(palette, pal_class = "Place"))
}
pdf("all_colors_hero.pdf", width = 15, height = 10)
ggarrange(plotlist = plotlist_hero, ncol=3, nrow=3)
ggarrange(plotlist = plotlist_villain, ncol=2, nrow=2)
ggarrange(plotlist = plotlist_places, ncol=2, nrow=2)
dev.off()
pdf("all_colors_hero.pdf", width = 15, height = 10)
ggarrange(plotlist = plotlist_hero, ncol=3, nrow=3)
dev.off()
pdf("all_colors_villain.pdf", width = 10, height = 6)
ggarrange(plotlist = plotlist_villain, ncol=2, nrow=2)
dev.off()
pdf("all_colors_places.pdf", width = 10, height = 6)
ggarrange(plotlist = plotlist_places, ncol=2, nrow=2)
dev.off()
knitr::include_graphics("images/all_colors_hero.pdf")
knitr::include_graphics("images/all_colors_hero.pdf", auto_pdf = TRUE)
knitr::include_graphics("images/all_colors_hero.pdf", auto_pdf = TRUE)
png("./images/all_colors_hero.png", width = 15, height = 10)
ggarrange(plotlist = plotlist_hero, ncol=3, nrow=3)
dev.off()
png("./images/all_colors_villain.png", width = 10, height = 6)
ggarrange(plotlist = plotlist_villain, ncol=2, nrow=2)
dev.off()
png("./images/all_colors_places.png", width = 10, height = 6)
ggarrange(plotlist = plotlist_places, ncol=2, nrow=2)
dev.off()
png("./images/all_colors_hero.png")
ggarrange(plotlist = plotlist_hero, ncol=3, nrow=3)
dev.off()
png("./images/all_colors_hero.png", width = 300, height=200)
ggarrange(plotlist = plotlist_hero, ncol=3, nrow=3)
dev.off()
png("./images/all_colors_hero.png", width = 1000, height=800)
ggarrange(plotlist = plotlist_hero, ncol=3, nrow=3)
dev.off()
png("./images/all_colors_hero.png", width = 1000, height=800, res=300)
ggarrange(plotlist = plotlist_hero, ncol=3, nrow=3)
dev.off()
library(ggpubr)
# make all palette plot
plotlist_hero= list()
plotlist_villain = list()
plotlist_places = list()
for (palette in names(hero_palettes)){
plotlist_hero[[palette]]=show_my_swamp(burp(palette, pal_class = "Hero"))
}
for (palette in names(villain_palettes)){
plotlist_villain[[palette]]=show_my_swamp(burp(palette, pal_class = "Villain"))
}
for (palette in names(place_palettes)){
plotlist_places[[palette]]=show_my_swamp(burp(palette, pal_class = "Place"))
}
pdf("./images/all_colors_hero.pdf", width = 15, height = 10)
ggarrange(plotlist = plotlist_hero, ncol=3, nrow=3)
dev.off()
pdf("./images/all_colors_villain.pdf", width = 10, height = 6)
ggarrange(plotlist = plotlist_villain, ncol=2, nrow=2)
dev.off()
pdf("./images/all_colors_places.pdf", width = 10, height = 6)
ggarrange(plotlist = plotlist_places, ncol=2, nrow=2)
dev.off()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "man/figures/README-",
out.width = "100%"
)
library(shRek)
library(ggplot2)
# Retrieve the available palettes
hero_palettes
villain_palettes
knitr::include_graphics("images/all_colors_villain.pdf")
place_palettes
knitr::include_graphics("images/all_colors_places.pdf")
# burp allows to extract color palette from the ones available
shrek_color <- burp("Shrek", pal_class="Hero", n=6)
# show_my_swamp displays the palette in a nice way
show_my_swamp(shrek_color)
# Pick colors
shrek_pal = burp("Shrek",pal_class="Hero",n=3)
#Do Plot
ggplot(iris, aes(y=Sepal.Length, x=Species, fill=Species)) + geom_boxplot() +
scale_fill_manual(values=shrek_pal)
# Pick Fairy Godmother palette
pal= burp("Fairy_Godmother","Villain",n=5)
# Make plot
ggplot(data=diamonds, aes(x=price, group=cut, fill=cut)) +
geom_density(adjust=1.5, alpha=0.7)  + scale_fill_manual(values=pal)
# Let pick Dragon_Keep palette
dragon <- c(burp("Dragon_Keep", pal_class = "Place", n=6),burp("Dragon", pal_class = "Hero", n=1))
#show_my_swamp(dragon)
library(reshape2)
WorldPhones.m = melt(WorldPhones)
colnames(WorldPhones.m) = c("Year", "Continent", "Phones")
head(WorldPhones.m)
# Make plot
ggplot(WorldPhones.m, aes(x=Year, y=Phones, color=Continent)) + geom_line() + scale_color_manual(values=dragon)
# Pick color
pal <-burp("Rumpelstiltskin",pal_class="Villain",n=4)
#Check survival
ggplot(data=as.data.frame(Titanic), aes(x=Age, y=Freq, fill=Class)) + geom_bar(stat="identity") + facet_wrap(~Survived+Sex)+
scale_fill_manual(values=pal)+
labs(title="Survival of Titanic passengers according to sex and class")
knitr::include_graphics("./images/all)colors_hero.pdf")
knitr::include_graphics("./images/all_colors_hero.pdf")
knitr::include_graphics("./images/all_colors_hero.pdf")
knitr::include_graphics("./images/all_colors_hero.pdf")
pdf("./images/all_colors_villain.pdf", width = 1000, height = 8000)
ggarrange(plotlist = plotlist_villain, ncol=2, nrow=2)
dev.off()
png("./images/all_colors_hero.png", width = 15, height = 10)
ggarrange(plotlist = plotlist_hero, ncol=3, nrow=3)
dev.off()
png("./images/all_colors_hero.png", width = 1000, height = 800)
ggarrange(plotlist = plotlist_hero, ncol=3, nrow=3)
dev.off()
png("./images/all_colors_hero.png", width = 1000, height = 800, res=300)
ggarrange(plotlist = plotlist_hero, ncol=3, nrow=3)
dev.off()
png("./images/all_colors_hero.png", width = 1000, height = 800)
ggarrange(plotlist = plotlist_hero, ncol=3, nrow=3)
dev.off()
png("./images/all_colors_hero.png", width = 15, height = 10, res=300, unit="cm")
ggarrange(plotlist = plotlist_hero, ncol=3, nrow=3)
dev.off()
png("./images/all_colors_hero.png", width = 15, height = 10, res=20, unit="cm")
ggarrange(plotlist = plotlist_hero, ncol=3, nrow=3)
dev.off()
png("./images/all_colors_hero.png", width = 15, height = 10, unit="cm")
png("./images/all_colors_hero.png", width = 15, height = 10, unit="cm")
png("./images/all_colors_hero.png", width = 15, height = 10, unit="cm", res=1)
ggarrange(plotlist = plotlist_hero, ncol=3, nrow=3)
dev.off()
png("./images/all_colors_hero.png", width = 15, height = 10, unit="cm", res=1000)
ggarrange(plotlist = plotlist_hero, ncol=3, nrow=3)
dev.off()
png("./images/all_colors_hero.png")
ggarrange(plotlist = plotlist_hero, ncol=3, nrow=3)
dev.off()
png("./images/all_colors_hero.png", width = 480, height = 480 )
ggarrange(plotlist = plotlist_hero, ncol=3, nrow=3)
dev.off()
png("./images/all_colors_hero.png", width = 800, height = 480 )
ggarrange(plotlist = plotlist_hero, ncol=3, nrow=3)
dev.off()
png("./images/all_colors_hero.png", width = 1000, height = 480 )
ggarrange(plotlist = plotlist_hero, ncol=3, nrow=3)
dev.off()
png("./images/all_colors_hero.png", width = 1200, height = 480 )
ggarrange(plotlist = plotlist_hero, ncol=3, nrow=3)
dev.off()
png("./images/all_colors_hero.png", width = 1200, height = 600)
ggarrange(plotlist = plotlist_hero, ncol=3, nrow=3)
dev.off()
jpeg("./images/all_colors_hero.jpeg", width = 1200, height = 600)
ggarrange(plotlist = plotlist_hero, ncol=3, nrow=3)
dev.off()
jpeg("./images/all_colors_hero.jpeg", width = 1200, height = 600, quality = 200)
ggarrange(plotlist = plotlist_hero, ncol=3, nrow=3)
dev.off()
jpeg("./images/all_colors_hero.jpeg", width = 1200, height = 600, quality = 300)
ggarrange(plotlist = plotlist_hero, ncol=3, nrow=3)
dev.off()
jpeg("./images/all_colors_hero.jpeg", width = 1200, height = 600, quality = 600)
ggarrange(plotlist = plotlist_hero, ncol=3, nrow=3)
dev.off()
jpeg("./images/all_colors_hero.jpeg", width = 1200, height = 600, quality = 600)
ggarrange(plotlist = plotlist_hero, ncol=3, nrow=3)
dev.off()
jpeg("./images/all_colors_hero.jpeg", width = 1200, height = 600, quality = 100)
ggarrange(plotlist = plotlist_hero, ncol=3, nrow=3)
dev.off()
jpeg("./images/all_colors_hero.jpeg", width = 1200, height = 600, quality = 100, res=100)
ggarrange(plotlist = plotlist_hero, ncol=3, nrow=3)
dev.off()
tiff("./images/all_colors_hero.tiff", width = 1200, height = 600, res=300)
ggarrange(plotlist = plotlist_hero, ncol=3, nrow=3)
dev.off()
tiff("./images/all_colors_hero.tiff", res=300)
ggarrange(plotlist = plotlist_hero, ncol=3, nrow=3)
dev.off()
tiff("./images/all_colors_hero.tiff", res=100)
ggarrange(plotlist = plotlist_hero, ncol=3, nrow=3)
dev.off()
tiff("./images/all_colors_hero.tiff", res=300, width = 15, height = 10, units = "cm")
ggarrange(plotlist = plotlist_hero, ncol=3, nrow=3)
dev.off()
tiff("./images/all_colors_hero.tiff", width = 15, height = 10, units = "cm")
ggarrange(plotlist = plotlist_hero, ncol=3, nrow=3)
dev.off()
